# csmeg framework build file for Scons
lib_srcdir_primitives = "src/Primitives"
lib_srcdir_base = "src/Base"
lib_srcdir_input = "src/Input"
lib_srcdir_renderer = "src/Renderer"
lib_includedir = "include/csmeg"

lib_sources_primitives = Glob(lib_srcdir_primitives + '/*.cpp')
lib_sources_base = Glob(lib_srcdir_base + '/*.cpp')
lib_sources_renderer = Glob(lib_srcdir_renderer + '/*.cpp')
lib_sources_input = Glob(lib_srcdir_input + '/*.cpp')
lib_headers_export = Glob(lib_includedir + '/*.h')

lib_sources = lib_sources_base + lib_sources_renderer + lib_sources_input + lib_sources_primitives

Import('env', 'project', 'mymode', 'debug_flags', 'release_flags')
localenv = env.Clone()

buildroot = '../' + mymode
builddir = buildroot + '/' + project
targetpath = builddir + '/' + project

if mymode == 'debug':
	localenv.Append(CPPFLAGS=debug_flags)
else:
	localenv.Append(CPPFLAGS=release_flags)

localenv.Append(CPPPATH=['include'])
localenv.Append(LIBS=['SDL2', 'GL', 'GLEW'])

localenv.VariantDir(builddir, ".", duplicate=0)

localenv.SharedLibrary(target = targetpath, source = lib_sources)
localenv.StaticLibrary(target = targetpath, source = lib_sources)

localenv.Install(builddir + '/include', lib_headers_export)
